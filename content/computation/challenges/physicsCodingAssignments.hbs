
<h2>
    Physics Coding Assignments
</h2>

<h4>
    Part 1: Understanding the Basics
</h4>
<ol>
    <li>
        <h5>
            Organizing Your Workspace
        </h5>
        <p>
            We have been learning the basics of how
            to use the operating system.
            In this assignment, you will organize your
            workspace a certain way.
        </p>
        <p>
            Go to the directory titled <code>workspace</code>,
            and make sure it has these directories inside of it.
        </p>
        <ul>
            <li>
                <code>python</code>
            </li>
            <li>
                <code>graphics</code>
            </li>
            <li>
                <code>ex50</code>
            </li>
            <li>
                <code>finished_assignments</code>
            </li>
        </ul>
        <p>
            Delete any files or directories in your folder
            that are not one of these.
        </p>
        <p>
            Make sure that the following is located inside each
            directory:
        </p>
        <ul>
            <li>
                The <code>python</code> directory
                should include at least two python programs,
                which are identified because they end in
                <code>.py</code>.
            </li>
            <li>
                The <code>graphics</code> directory
                should include at least two graphics.
                These can be <code>.png</code>
                files that you made in this assignment or can be appropriate
                graphics downloaded from another site.
            </li>
            <li>
                The <code>ex50</code> directory is built into
                the system, so just leave it exactly as it
                was when you started.
            </li>
            <li>
                The <code>finished_assignments</code> directory
                can be empty, unless you finished one of the
                other assignments!
            </li>
        </ul>
    </li>
    <li>
        A Shakespeare Program
        <p>
            Inside of the <code>finished_assignments</code>
            directory, include a file named <code>shakespeare.py</code>.
            <strong>Make sure</strong> that you spell <code>shakespeare</code> correctly!
            I am going to attempt to run this program by typing
            <code>python finished_assignments/caliban.py</code>.
            When I do so, it should print the following lines:
            <br>
            Be not afread; the isle is full of noises,
            <br>
            Sounds and sweet airs, that give delight and hurt not.
            <br>
            Sometimes a thousand twangling instruments
            <br>
            Will hum about mine ears, and sometime voices
            <br>
            That, if I then had waked after long sleep,
            <br>
            Will make me sleep again: and then, in dreaming,
            <br>
            The clouds methought would open and show riches
            <br>
            Ready to drop upon me that, when I waked,
            <br>
            I cried to dream again.
        </p>
        <p>
            Note that, for full credit, each line must be separate.
        </p>
        <iframe width="560" height="315" src="https://www.youtube.com/embed/R1-PoAxh0iE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>    </li>
    <li>
        Defining a Simple Python Function
        <p>
            Create a program called <code>simple_python_function.py</code>
            and put it inside of the <code>finished_assignments</code>
            directory.
            Create a simple function called <code>get_y</code>.
            The function has three arguments <code>m</code>,<code>x</code>, and <code>b</code>.
            Thus, your function should look like <code>get_y(m,x,b)</code>.
            Your function should return the value \( mx + b \).
        </p>
        <p>
            To test your function, I am going to run three different commands:
            <code>print(get_y(1,1,1))</code>
            <code>print(get_y(3,4,5))</code>
            <code>print(get_y(-1,4,-6))</code>
            If you did everything correctly,
            I will get back:
            <code>2</code>
            <code>17</code>
            <code>-10</code>
        </p>
    </li>
</ol>

